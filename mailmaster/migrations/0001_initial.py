# Generated by Django 4.2.2 on 2024-10-21 18:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=250, verbose_name="ФИО")),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="почта"
                    ),
                ),
                ("comment", models.TextField(verbose_name="комментарий")),
            ],
            options={
                "verbose_name": "клиент",
                "verbose_name_plural": "клиенты",
                "ordering": ("email",),
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=250, verbose_name="тема письма")),
                ("body", models.TextField(verbose_name="тело письма")),
            ],
            options={
                "verbose_name": "письмо",
                "verbose_name_plural": "письма",
                "ordering": ("title",),
            },
        ),
        migrations.CreateModel(
            name="NewsLetter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Дата и время создания рассылки"
                    ),
                ),
                (
                    "start_date",
                    models.DateTimeField(verbose_name="Дата и время отправки рассылки"),
                ),
                (
                    "end_date",
                    models.DateTimeField(
                        verbose_name="Дата и время отправки следующей рассылки"
                    ),
                ),
                (
                    "period",
                    models.CharField(
                        choices=[
                            ("once", "Единоразовая рассылка"),
                            ("days", "Ежедневная рассылка"),
                            ("weeks", "Еженедельная рассылка"),
                            ("months", "Ежемесячная рассылка"),
                        ],
                        max_length=10,
                        verbose_name="Периодичность рассылки",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("created", "Рассылка создана"),
                            ("active", "Рассылка запущена"),
                            ("closed", "Рассылка завершена"),
                        ],
                        default="created",
                        max_length=10,
                        verbose_name="Статус рассылки",
                    ),
                ),
                (
                    "clients",
                    models.ManyToManyField(
                        to="mailmaster.client", verbose_name="Клиенты"
                    ),
                ),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mailmaster.message",
                        verbose_name="Сообщение для рассылки",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь рассылки",
                    ),
                ),
            ],
            options={
                "verbose_name": "рассылка",
                "verbose_name_plural": "рассылки",
                "ordering": ("status", "period"),
            },
        ),
        migrations.CreateModel(
            name="EmailSendAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_attempt_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="дата и время последней попытки"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("success", "Успешно"), ("failed", "Не успешно")],
                        max_length=10,
                        verbose_name="статус попытки",
                    ),
                ),
                (
                    "response",
                    models.TextField(
                        blank=True, null=True, verbose_name="ответ почтового сервера"
                    ),
                ),
                (
                    "newsletter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mailmaster.newsletter",
                        verbose_name="рассылка",
                    ),
                ),
            ],
        ),
    ]
